#!/usr/bin/python


# Scipt for the power spectral density measurement using USRP1
# Author: Bilal Parvez

import os
import scipy
import numpy as np
import sys
import time

# To execute the gnu radio scipt in a shell

#fil = open('averaged', 'w')
# sampling 10,10 Mhz chunks across the entire 100 Mhz spectrum from 2.4 to 2.5 Ghz
date_time = time.strftime("%c")
n = [2405000000 ,2415000000 ,2425000000,2435000000,2445000000,2455000000,2465000000,2475000000,2485000000,2495000000]   #for the sampling array
values = [] # array to hold the averaged frequency values
samples = 100 # Number of samples need to adjust in head of ours.grc
i = 1 # for incrementing and changing the file numbers
sampling_location=raw_input ("Enter location of the sampling:")  # for physical location of the sampling

if len(sampling_location) > 0:  # exception handling
    pass
else:
    print("Enter some value for the sampling location and run the script again")
    sys.exit()

for items in n:

    average_file_name = sampling_location+ '_' + str(i)
    fil=open( os.path.join('Backup',average_file_name+'averaged'),'a') # opening a file to store the averaged samples , in the backup directory now
    fil2=open( os.path.join('Backup',average_file_name+'raw'),'a') # opening a file to store the averaged samples , in the backup directory now

    cmdstring = "./uhd_fft.py -f %s > /dev/null" %(items) # type casting items so that it can be used for os.system call
    os.system(cmdstring) # running the script on the system terminal
    array_from_file = scipy.fromfile(open("value"), dtype=scipy.float32) # file value is the file generated by the gnu radios scripts
    fil2.write(array_from_file)   # to save the exact signal as well

    f = np.mean( np.array(np.array_split(array_from_file, samples)), axis=0 )
    fil.write(f) # write the a  veraged samples into the file
    fil.close()
    f = np.mean(f) # take a mean , is it a good idea ?
    #f = max(f) # trying with the maximum value in the array of the fft vector values , or max, either one of those
    values.append(f) # Putting values in an array to print at the end
    i = i+1  # incrementing the counter for the file name


os.system('clear')  #clear the terminal
# string_test = "%s{1..10}" % sampling_location
# cmdstring3 = "mv %s ./Backup/" %(string_test) # cmdstring for the cleaning
# os.system(cmdstring3) # move all the sample files into a different folder, to remove clutter

for i in range(0,len(n)):
    print "for" , n[i] ,":" , values[i]   # to print the values of the fft , need to figure this out further, what the values is and so forth


print "total average for " , sampling_location,':', np.mean(values) # final value my taking the mean of the entire spectrum

cmdstring2 = "echo 'Average for Sampling location %s on %s is : %s'  >> Average_List.txt" %(sampling_location,date_time,np.mean(values))  # For keeping a total txt file as a summary of the whole survey
os.system(cmdstring2) # runnning script on the system terminal
